name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize:
    runs-on: ubuntu-latest

    services:
      # Nous définissons un service Docker pour simuler l'environnement
      docker:
        image: docker:20.10.7
        options: --privileged
        runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3 : Configurer Docker Compose
      - name: Set up Docker Compose
        run: |
          curl -sSL https://get.docker.com/ | sh
          sudo apt-get install docker-compose

      # Étape 4 : Construire et tester les services Docker Compose
      - name: Build and run containers with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d --build # Démarre les conteneurs en mode détaché et construit les images
          docker-compose ps # Liste les conteneurs pour vérifier leur état
          docker-compose exec node npm run test # Remplace par la commande de test de ton application Node.js
          docker-compose exec php_apache php -l /var/www/html/index.php # Vérifie la syntaxe PHP (remplace par un test pertinent)
          
      # Étape 5 : Nettoyer en arrêtant et supprimant les conteneurs après les tests
      - name: Stop and remove containers
        run: docker-compose down
